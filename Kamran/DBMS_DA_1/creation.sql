-- Run this file in SQL*PLUS by @creation.sql

-- Drop tables in reverse order of creation

DROP TABLE PROFESSOR_DEPARTMENT;

DROP TABLE PROGRAMME;

DROP TABLE STUDENT_VISA;

DROP TABLE ENROLL;

DROP TABLE STUDENT;

DROP TABLE CLASS;

DROP TABLE SEMESTER;

DROP TABLE COURSE;

DROP TABLE DEPARTMENT;

DROP TABLE SCHOOL;

DROP TABLE PROFESSOR;

CREATE TABLE PROFESSOR(
    PROF_ID VARCHAR(10),
    PROF_NAME VARCHAR(50),
    EMAIL VARCHAR(50),
    MOBILE NUMBER,
    SPECIALITY VARCHAR(50),
    CONSTRAINT PROFESSOR_PROF_ID_PK PRIMARY KEY(PROF_ID),
    CONSTRAINT PROFESSOR_PROF_ID_LEN_5 CHECK(LENGTH(PROF_ID) = 5),
    CONSTRAINT PROFESSOR_MOBILE_NO_UNIQUE UNIQUE(MOBILE),
    CONSTRAINT PROFESSOR_EMAIL_UNIQUE UNIQUE(EMAIL),
    CONSTRAINT PROFESSOR_EMAIL_AT CHECK(EMAIL LIKE '%@%'),
    CONSTRAINT PROFESSOR_MOBILE_TEN CHECK(LENGTH(MOBILE) = 10)
);

CREATE TABLE SCHOOL(
    SCODE VARCHAR(10),
    SCL_NAME VARCHAR(50),
    PROF_ID VARCHAR(10),
    LOCATION VARCHAR(50),
    CONSTRAINT SCHOOL_SCODE_PK PRIMARY KEY(SCODE),
    CONSTRAINT SCHOOL_PROF_ID_FK FOREIGN KEY(PROF_ID) REFERENCES PROFESSOR(PROF_ID) ON DELETE CASCADE
);

CREATE TABLE DEPARTMENT(
    DEPT_ID VARCHAR(10),
    DNAME VARCHAR(50),
    SCODE VARCHAR(10),
    CONSTRAINT DEPARTMENT_DEPT_ID_PK PRIMARY KEY(DEPT_ID),
    CONSTRAINT DEPARTMENT_SCODE_FK FOREIGN KEY(SCODE) REFERENCES SCHOOL(SCODE) ON DELETE CASCADE
);

CREATE TABLE COURSE(
    CRS_CODE VARCHAR(10),
    CRS_NAME VARCHAR(50),
    DESCRIPTION VARCHAR(255),
    CREDITS NUMBER,
    HOURS NUMBER,
    CONSTRAINT COURSE_CRS_CODE_PK PRIMARY KEY(CRS_CODE)
);

CREATE TABLE SEMESTER(
    SEM_CODE VARCHAR(20),
    TERM VARCHAR(20),
    YEAR NUMBER,
    SDATE DATE,
    EDATE DATE,
    CONSTRAINT SEMESTER_SEM_CODE PRIMARY KEY(SEM_CODE),
    CONSTRAINT SEMESTER_SEM_CODE_START CHECK(SEM_CODE LIKE 'WIN%' OR SEM_CODE LIKE 'FALL%'),
    CONSTRAINT SEMESTER_TERM_ONLY CHECK(TERM LIKE 'Winter' OR TERM LIKE 'Fall')
);

CREATE TABLE CLASS(
    CLS_CODE VARCHAR(10),
    SLOT VARCHAR(10),
    STIME TIMESTAMP,
    ETIME TIMESTAMP,
    CRS_CODE VARCHAR(10),
    PROF_ID VARCHAR(10),
    ROOM_NO NUMBER,
    SEM_CODE VARCHAR(20),
    DAY_OF_WEEK VARCHAR(20),
    CONSTRAINT CLASS_CLS_CODE_PK PRIMARY KEY(CLS_CODE),
    CONSTRAINT CLASS_CRS_CODE_FK FOREIGN KEY(CRS_CODE) REFERENCES COURSE(CRS_CODE) ON DELETE CASCADE,
    CONSTRAINT CLASS_PROF_ID_FK FOREIGN KEY(PROF_ID) REFERENCES PROFESSOR(PROF_ID) ON DELETE CASCADE,
    CONSTRAINT CLASS_SEM_CODE_FK FOREIGN KEY(SEM_CODE) REFERENCES SEMESTER(SEM_CODE) ON DELETE CASCADE
);

CREATE TABLE STUDENT(
    REG_NO VARCHAR(10),
    SNAME VARCHAR(50),
    ADDRESS VARCHAR(100),
    DOB DATE,
    EMAIL VARCHAR(50),
    MOBILE NUMBER,
    DEPT_ID VARCHAR(10),
    PROF_ID VARCHAR(10),
    CONSTRAINT STUDENT_REG_NO_PK PRIMARY KEY(REG_NO),
    CONSTRAINT STUDENT_MOBILE_NO_UNIQUE UNIQUE(MOBILE),
    CONSTRAINT STUDENT_EMAIL_UNIQUE UNIQUE(EMAIL),
    CONSTRAINT STUDENT_EMAIL_AT CHECK(EMAIL LIKE '%@%'),
    CONSTRAINT STUDENT_MOBILE_TEN CHECK(LENGTH(MOBILE) = 10),
    CONSTRAINT STUDENT_DEPT_ID_FK FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID) ON DELETE CASCADE,
    CONSTRAINT STUDENT_PROF_ID_FK FOREIGN KEY(PROF_ID) REFERENCES PROFESSOR(PROF_ID) ON DELETE CASCADE
);

CREATE TABLE ENROLL(
    CLS_CODE VARCHAR(10),
    REG_NO VARCHAR(10),
    ENROLL_TIME TIMESTAMP,
    GRADE VARCHAR(1),
    CONSTRAINT ENROLL_PK PRIMARY KEY(CLS_CODE, REG_NO),
    CONSTRAINT GRADE_IN CHECK (GRADE IN ('S', 'A', 'B', 'C', 'D', 'E', 'F')),
    CONSTRAINT ENROLL_CLS_CODE_FK FOREIGN KEY(CLS_CODE) REFERENCES CLASS(CLS_CODE) ON DELETE CASCADE,
    CONSTRAINT ENROLL_REG_NO_FK FOREIGN KEY(REG_NO) REFERENCES STUDENT(REG_NO) ON DELETE CASCADE
);

CREATE TABLE STUDENT_VISA(
    REG_NO VARCHAR(10),
    VISA_STATUS VARCHAR(10),
    CONSTRAINT STUDENT_VISA PRIMARY KEY(REG_NO),
    CONSTRAINT STUDENT_VISA_STATUS CHECK (VISA_STATUS IN ('ACCEPTED', 'REJECTED')),
    CONSTRAINT STUDENT_VISA_REG_NO_FK FOREIGN KEY(REG_NO) REFERENCES STUDENT(REG_NO) ON DELETE CASCADE
);

CREATE TABLE PROGRAMME(
    PROG_CODE VARCHAR(10),
    PROG_NAME VARCHAR(50),
    PROG_PREAMBLE VARCHAR(100),
    SCODE VARCHAR(10),
    DEPT_ID VARCHAR(10),
    CONSTRAINT PROGRAMME_PK PRIMARY KEY(PROG_CODE),
    CONSTRAINT PROGRAMME_SCODE_FK FOREIGN KEY(SCODE) REFERENCES SCHOOL(SCODE) ON DELETE CASCADE,
    CONSTRAINT PROGRAMME_DEPT_ID_FK FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID) ON DELETE CASCADE
);

CREATE TABLE PROFESSOR_DEPARTMENT(
    PROF_ID VARCHAR(10),
    DEPT_ID VARCHAR(10),
    IS_HOD VARCHAR(1),
    CONSTRAINT PROFESSOR_DEPARTMENT_PK PRIMARY KEY(PROF_ID, DEPT_ID),
    CONSTRAINT PROFESSOR_DEPARTMENT_IS_HOD_Y_N CHECK(IS_HOD IN ('T', 'F')),
    CONSTRAINT PROFESSOR_DEPARTMENT_PROF_ID_FK FOREIGN KEY(PROF_ID) REFERENCES PROFESSOR(PROF_ID) ON DELETE CASCADE,
    CONSTRAINT PROFESSOR_DEPARTMENT_DEPT_ID_FK FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID) ON DELETE CASCADE
);