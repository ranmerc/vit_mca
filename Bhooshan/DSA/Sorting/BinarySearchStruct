#include <iostream>
#include <string>
using namespace std;

typedef struct employee
{
    int id;
    string name;
    double salary;
} emp;

void sort(emp records[], int n)
{
    for (int i = 0; i < n; i++)
    {
        for (int j = i + 1; j < n; j++)
        {
            if (records[i].id > records[j].id)
            {
                emp temp = records[i];
                records[i] = records[j];
                records[j] = temp;
            }
        }
    }
}

void display(emp records[], int n)
{
    cout << "\nRECORDS : " << endl;
    for (int i = 0; i < n; i++)
    {
        cout << records[i].id << "\t" << records[i].name << "\t" << records[i].salary << endl;
    }
}

int binarysearch(emp records[], int n, int key)
{
    int low = 0;
    int high = n - 1;
    int cnt = 1;
    int ans = -1;
    while (low <= high)
    {
        int mid = low + (high - low) / 2;
        if (records[mid].id > key)
            high = mid - 1;
        else if (records[mid].id < key)
            low = mid + 1;
        else
        {
            ans = mid;
            break;
        }
        cnt++;
    }
    cout << "No of comparisons " << cnt << endl;
    return ans;
}

void details(emp records[], int i)
{
    cout << "\nDetails of the employee : " << endl;
    cout << records[i].id << "\t" << records[i].name << "\t" << records[i].salary << endl;
}

int main()
{
    emp records[] = {{234, "Sammy", 45671.2}, {112, "Mitra", 87651.2}, {987, "Karan", 67823.3}, {453, "Young", 23456.2}, {113, "Old", 910021}};

    int n = 5;

    sort(records, n);
    display(records, n);

    cout << "\nEnter the id to search : " << endl;
    int key;
    cin >> key;

    int ans = binarysearch(records, n, key);
    if (ans == -1)
        cout << "Employee not found" << endl;
    else
    {
        cout << "Employee found at index " << ans << endl;
        details(records, ans);
    }
    return 0;
}
