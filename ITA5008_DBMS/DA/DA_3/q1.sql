--file_name : q1.sql
SET SERVEROUTPUT ON

--COLUMN FORMATTING
COLUMN ID FORMAT 9999

COLUMN NAME FORMAT A20

COLUMN ADDRESS FORMAT A20

COLUMN HIRE_DATE FORMAT A20

SET LINESIZE 1000

--DROPPING
DROP TABLE EMPLOYEE;

DROP TYPE EMPLOYEE_TYPE;

--TYPE
CREATE OR REPLACE TYPE EMPLOYEE_TYPE AS
    OBJECT (
        ID NUMBER,
        NAME VARCHAR(50),
        ADDRESS VARCHAR(100),
        HIRE_DATE DATE,
        MEMBER FUNCTION GETEXPERIENCE RETURN NUMBER,
        MEMBER FUNCTION GETID RETURN NUMBER,
        MEMBER PROCEDURE DISPLAYEMPDETAIL,
        STATIC FUNCTION GETEMP(EMPID NUMBER) RETURN EMPLOYEE_TYPE,
        STATIC PROCEDURE INSERT_EMPLOYEE(EMPID NUMBER, EMPNAME VARCHAR, EMPADDRESS VARCHAR, EMPHIRE_DATE DATE),
        STATIC PROCEDURE DELETE_EMPLOYEE(EMPID NUMBER)
    );
/

--TABLE OF TYPE
CREATE TABLE EMPLOYEE OF EMPLOYEE_TYPE;

--TYPE BODY
CREATE OR REPLACE TYPE BODY EMPLOYEE_TYPE AS
    MEMBER FUNCTION GETEXPERIENCE RETURN NUMBER IS
    BEGIN
        RETURN TRUNC(MONTHS_BETWEEN(SYSDATE, SELF.HIRE_DATE)/12);
    END GETEXPERIENCE;
    MEMBER FUNCTION GETID RETURN NUMBER IS
    BEGIN
        RETURN SELF.ID;
    END GETID;
    MEMBER PROCEDURE DISPLAYEMPDETAIL IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE('ID: '
            || SELF.ID);
        DBMS_OUTPUT.PUT_LINE('Name: '
            || SELF.NAME);
        DBMS_OUTPUT.PUT_LINE('Address: '
            || SELF.ADDRESS);
        DBMS_OUTPUT.PUT_LINE('Hire date: '
            || TO_CHAR(SELF.HIRE_DATE, 'DD-MON-YYYY'));
    END DISPLAYEMPDETAIL;
    STATIC FUNCTION GETEMP(
        EMPID NUMBER
    ) RETURN EMPLOYEE_TYPE AS
        EMP EMPLOYEE_TYPE;
    BEGIN
        SELECT
            EMPLOYEE_TYPE(ID,
            NAME,
            ADDRESS,
            HIRE_DATE) INTO EMP
        FROM
            EMPLOYEE
        WHERE
            ID = EMPID;
        RETURN EMP;
    END GETEMP;
    STATIC PROCEDURE INSERT_EMPLOYEE(
        EMPID NUMBER,
        EMPNAME VARCHAR,
        EMPADDRESS VARCHAR,
        EMPHIRE_DATE DATE
    ) IS
    BEGIN
        INSERT INTO EMPLOYEE VALUES (
            EMPID,
            EMPNAME,
            EMPADDRESS,
            EMPHIRE_DATE
        );
    END INSERT_EMPLOYEE;
    STATIC PROCEDURE DELETE_EMPLOYEE(
        EMPID NUMBER
    ) IS
    BEGIN
        DELETE FROM EMPLOYEE
        WHERE
            ID = EMPID;
    END DELETE_EMPLOYEE;
END;
/

--INSERTING

DELETE FROM EMPLOYEE;

INSERT INTO EMPLOYEE VALUES(
    2201,
    'E1',
    'A1',
    '18-MAR-10'
);

INSERT INTO EMPLOYEE VALUES(
    2202,
    'E2',
    'A2',
    '04-FEB-14'
);

INSERT INTO EMPLOYEE VALUES(
    2203,
    'E3',
    'A3',
    '10-JUN-12'
);

INSERT INTO EMPLOYEE VALUES(
    2204,
    'E4',
    'A4',
    '12-JUL-21'
);

SELECT
    *
FROM
    EMPLOYEE;

EXEC EMPLOYEE_TYPE.INSERT_EMPLOYEE(2205, 'E5', 'A5', '17-SEP-09');

SELECT
    *
FROM
    EMPLOYEE;

DECLARE
    EMP EMPLOYEE_TYPE;
BEGIN
    EMP := EMPLOYEE_TYPE.GETEMP(2202);
    EMP.DISPLAYEMPDETAIL;
    DBMS_OUTPUT.PUT_LINE('EXPERIENCE(YEARS) : '
        || EMP.GETEXPERIENCE);
END;
/

SELECT
    *
FROM
    EMPLOYEE;

EXEC EMPLOYEE_TYPE.DELETE_EMPLOYEE(2201);

SELECT
    *
FROM
    EMPLOYEE;